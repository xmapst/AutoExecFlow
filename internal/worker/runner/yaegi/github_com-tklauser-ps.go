// Code generated by 'yaegi extract github.com/tklauser/ps'. DO NOT EDIT.

package yaegi

import (
	"github.com/tklauser/ps"
	"reflect"
	"time"
)

func init() {
	Symbols["github.com/tklauser/ps/ps"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"FindProcess": reflect.ValueOf(ps.FindProcess),
		"Processes":   reflect.ValueOf(ps.Processes),

		// type definitions
		"Process": reflect.ValueOf((*ps.Process)(nil)),

		// interface wrapper definitions
		"_Process": reflect.ValueOf((*_github_com_tklauser_ps_Process)(nil)),
	}
}

// _github_com_tklauser_ps_Process is an interface wrapper for Process type
type _github_com_tklauser_ps_Process struct {
	IValue          interface{}
	WCommand        func() string
	WCreationTime   func() time.Time
	WExecutableArgs func() []string
	WExecutablePath func() string
	WGID            func() int
	WPID            func() int
	WPPID           func() int
	WUID            func() int
}

func (W _github_com_tklauser_ps_Process) Command() string {
	return W.WCommand()
}
func (W _github_com_tklauser_ps_Process) CreationTime() time.Time {
	return W.WCreationTime()
}
func (W _github_com_tklauser_ps_Process) ExecutableArgs() []string {
	return W.WExecutableArgs()
}
func (W _github_com_tklauser_ps_Process) ExecutablePath() string {
	return W.WExecutablePath()
}
func (W _github_com_tklauser_ps_Process) GID() int {
	return W.WGID()
}
func (W _github_com_tklauser_ps_Process) PID() int {
	return W.WPID()
}
func (W _github_com_tklauser_ps_Process) PPID() int {
	return W.WPPID()
}
func (W _github_com_tklauser_ps_Process) UID() int {
	return W.WUID()
}
