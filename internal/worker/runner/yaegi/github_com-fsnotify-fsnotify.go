// Code generated by 'yaegi extract github.com/fsnotify/fsnotify'. DO NOT EDIT.

package yaegi

import (
	"github.com/fsnotify/fsnotify"
	"reflect"
)

func init() {
	Symbols["github.com/fsnotify/fsnotify/fsnotify"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Chmod":               reflect.ValueOf(fsnotify.Chmod),
		"Create":              reflect.ValueOf(fsnotify.Create),
		"ErrClosed":           reflect.ValueOf(&fsnotify.ErrClosed).Elem(),
		"ErrEventOverflow":    reflect.ValueOf(&fsnotify.ErrEventOverflow).Elem(),
		"ErrNonExistentWatch": reflect.ValueOf(&fsnotify.ErrNonExistentWatch).Elem(),
		"NewBufferedWatcher":  reflect.ValueOf(fsnotify.NewBufferedWatcher),
		"NewWatcher":          reflect.ValueOf(fsnotify.NewWatcher),
		"Remove":              reflect.ValueOf(fsnotify.Remove),
		"Rename":              reflect.ValueOf(fsnotify.Rename),
		"WithBufferSize":      reflect.ValueOf(fsnotify.WithBufferSize),
		"Write":               reflect.ValueOf(fsnotify.Write),

		// type definitions
		"Event":   reflect.ValueOf((*fsnotify.Event)(nil)),
		"Op":      reflect.ValueOf((*fsnotify.Op)(nil)),
		"Watcher": reflect.ValueOf((*fsnotify.Watcher)(nil)),
	}
}
