// Code generated by 'yaegi extract github.com/go-sql-driver/mysql'. DO NOT EDIT.

package yaegi

import (
	"github.com/go-sql-driver/mysql"
	"reflect"
)

func init() {
	Symbols["github.com/go-sql-driver/mysql/mysql"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BeforeConnect":           reflect.ValueOf(mysql.BeforeConnect),
		"DeregisterDialContext":   reflect.ValueOf(mysql.DeregisterDialContext),
		"DeregisterLocalFile":     reflect.ValueOf(mysql.DeregisterLocalFile),
		"DeregisterReaderHandler": reflect.ValueOf(mysql.DeregisterReaderHandler),
		"DeregisterServerPubKey":  reflect.ValueOf(mysql.DeregisterServerPubKey),
		"DeregisterTLSConfig":     reflect.ValueOf(mysql.DeregisterTLSConfig),
		"EnableCompression":       reflect.ValueOf(mysql.EnableCompression),
		"ErrBusyBuffer":           reflect.ValueOf(&mysql.ErrBusyBuffer).Elem(),
		"ErrCleartextPassword":    reflect.ValueOf(&mysql.ErrCleartextPassword).Elem(),
		"ErrInvalidConn":          reflect.ValueOf(&mysql.ErrInvalidConn).Elem(),
		"ErrMalformPkt":           reflect.ValueOf(&mysql.ErrMalformPkt).Elem(),
		"ErrNativePassword":       reflect.ValueOf(&mysql.ErrNativePassword).Elem(),
		"ErrNoTLS":                reflect.ValueOf(&mysql.ErrNoTLS).Elem(),
		"ErrOldPassword":          reflect.ValueOf(&mysql.ErrOldPassword).Elem(),
		"ErrOldProtocol":          reflect.ValueOf(&mysql.ErrOldProtocol).Elem(),
		"ErrPktSync":              reflect.ValueOf(&mysql.ErrPktSync).Elem(),
		"ErrPktSyncMul":           reflect.ValueOf(&mysql.ErrPktSyncMul).Elem(),
		"ErrPktTooLarge":          reflect.ValueOf(&mysql.ErrPktTooLarge).Elem(),
		"ErrUnknownPlugin":        reflect.ValueOf(&mysql.ErrUnknownPlugin).Elem(),
		"NewConfig":               reflect.ValueOf(mysql.NewConfig),
		"NewConnector":            reflect.ValueOf(mysql.NewConnector),
		"ParseDSN":                reflect.ValueOf(mysql.ParseDSN),
		"RegisterDial":            reflect.ValueOf(mysql.RegisterDial),
		"RegisterDialContext":     reflect.ValueOf(mysql.RegisterDialContext),
		"RegisterLocalFile":       reflect.ValueOf(mysql.RegisterLocalFile),
		"RegisterReaderHandler":   reflect.ValueOf(mysql.RegisterReaderHandler),
		"RegisterServerPubKey":    reflect.ValueOf(mysql.RegisterServerPubKey),
		"RegisterTLSConfig":       reflect.ValueOf(mysql.RegisterTLSConfig),
		"SetLogger":               reflect.ValueOf(mysql.SetLogger),
		"TimeTruncate":            reflect.ValueOf(mysql.TimeTruncate),

		// type definitions
		"Config":          reflect.ValueOf((*mysql.Config)(nil)),
		"DialContextFunc": reflect.ValueOf((*mysql.DialContextFunc)(nil)),
		"DialFunc":        reflect.ValueOf((*mysql.DialFunc)(nil)),
		"Logger":          reflect.ValueOf((*mysql.Logger)(nil)),
		"MySQLDriver":     reflect.ValueOf((*mysql.MySQLDriver)(nil)),
		"MySQLError":      reflect.ValueOf((*mysql.MySQLError)(nil)),
		"NopLogger":       reflect.ValueOf((*mysql.NopLogger)(nil)),
		"NullTime":        reflect.ValueOf((*mysql.NullTime)(nil)),
		"Option":          reflect.ValueOf((*mysql.Option)(nil)),
		"Result":          reflect.ValueOf((*mysql.Result)(nil)),

		// interface wrapper definitions
		"_Logger": reflect.ValueOf((*_github_com_go_sql_driver_mysql_Logger)(nil)),
		"_Result": reflect.ValueOf((*_github_com_go_sql_driver_mysql_Result)(nil)),
	}
}

// _github_com_go_sql_driver_mysql_Logger is an interface wrapper for Logger type
type _github_com_go_sql_driver_mysql_Logger struct {
	IValue interface{}
	WPrint func(v ...any)
}

func (W _github_com_go_sql_driver_mysql_Logger) Print(v ...any) {
	W.WPrint(v...)
}

// _github_com_go_sql_driver_mysql_Result is an interface wrapper for Result type
type _github_com_go_sql_driver_mysql_Result struct {
	IValue            interface{}
	WAllLastInsertIds func() []int64
	WAllRowsAffected  func() []int64
	WLastInsertId     func() (int64, error)
	WRowsAffected     func() (int64, error)
}

func (W _github_com_go_sql_driver_mysql_Result) AllLastInsertIds() []int64 {
	return W.WAllLastInsertIds()
}
func (W _github_com_go_sql_driver_mysql_Result) AllRowsAffected() []int64 {
	return W.WAllRowsAffected()
}
func (W _github_com_go_sql_driver_mysql_Result) LastInsertId() (int64, error) {
	return W.WLastInsertId()
}
func (W _github_com_go_sql_driver_mysql_Result) RowsAffected() (int64, error) {
	return W.WRowsAffected()
}
