// Code generated by 'yaegi extract github.com/go-cmd/cmd'. DO NOT EDIT.

package yaegi

import (
	"github.com/go-cmd/cmd"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/go-cmd/cmd/cmd"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DEFAULT_LINE_BUFFER_SIZE": reflect.ValueOf(constant.MakeFromLiteral("16384", token.INT, 0)),
		"DEFAULT_STREAM_CHAN_SIZE": reflect.ValueOf(constant.MakeFromLiteral("1000", token.INT, 0)),
		"ErrNotStarted":            reflect.ValueOf(&cmd.ErrNotStarted).Elem(),
		"NewCmd":                   reflect.ValueOf(cmd.NewCmd),
		"NewCmdOptions":            reflect.ValueOf(cmd.NewCmdOptions),
		"NewOutputBuffer":          reflect.ValueOf(cmd.NewOutputBuffer),
		"NewOutputStream":          reflect.ValueOf(cmd.NewOutputStream),

		// type definitions
		"Cmd":                   reflect.ValueOf((*cmd.Cmd)(nil)),
		"ErrLineBufferOverflow": reflect.ValueOf((*cmd.ErrLineBufferOverflow)(nil)),
		"Options":               reflect.ValueOf((*cmd.Options)(nil)),
		"OutputBuffer":          reflect.ValueOf((*cmd.OutputBuffer)(nil)),
		"OutputStream":          reflect.ValueOf((*cmd.OutputStream)(nil)),
		"Status":                reflect.ValueOf((*cmd.Status)(nil)),
	}
}
