// Code generated by 'yaegi extract github.com/json-iterator/go'. DO NOT EDIT.

package yaegi

import (
	"github.com/json-iterator/go"
	"github.com/modern-go/reflect2"
	"io"
	"reflect"
	"unsafe"
)

func init() {
	Symbols["github.com/json-iterator/go/jsoniter"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ArrayValue":                          reflect.ValueOf(jsoniter.ArrayValue),
		"BoolValue":                           reflect.ValueOf(jsoniter.BoolValue),
		"CastJsonNumber":                      reflect.ValueOf(jsoniter.CastJsonNumber),
		"ConfigCompatibleWithStandardLibrary": reflect.ValueOf(&jsoniter.ConfigCompatibleWithStandardLibrary).Elem(),
		"ConfigDefault":                       reflect.ValueOf(&jsoniter.ConfigDefault).Elem(),
		"ConfigFastest":                       reflect.ValueOf(&jsoniter.ConfigFastest).Elem(),
		"Get":                                 reflect.ValueOf(jsoniter.Get),
		"InvalidValue":                        reflect.ValueOf(jsoniter.InvalidValue),
		"Marshal":                             reflect.ValueOf(jsoniter.Marshal),
		"MarshalIndent":                       reflect.ValueOf(jsoniter.MarshalIndent),
		"MarshalToString":                     reflect.ValueOf(jsoniter.MarshalToString),
		"NewDecoder":                          reflect.ValueOf(jsoniter.NewDecoder),
		"NewEncoder":                          reflect.ValueOf(jsoniter.NewEncoder),
		"NewIterator":                         reflect.ValueOf(jsoniter.NewIterator),
		"NewStream":                           reflect.ValueOf(jsoniter.NewStream),
		"NilValue":                            reflect.ValueOf(jsoniter.NilValue),
		"NumberValue":                         reflect.ValueOf(jsoniter.NumberValue),
		"ObjectValue":                         reflect.ValueOf(jsoniter.ObjectValue),
		"Parse":                               reflect.ValueOf(jsoniter.Parse),
		"ParseBytes":                          reflect.ValueOf(jsoniter.ParseBytes),
		"ParseString":                         reflect.ValueOf(jsoniter.ParseString),
		"RegisterExtension":                   reflect.ValueOf(jsoniter.RegisterExtension),
		"RegisterFieldDecoder":                reflect.ValueOf(jsoniter.RegisterFieldDecoder),
		"RegisterFieldDecoderFunc":            reflect.ValueOf(jsoniter.RegisterFieldDecoderFunc),
		"RegisterFieldEncoder":                reflect.ValueOf(jsoniter.RegisterFieldEncoder),
		"RegisterFieldEncoderFunc":            reflect.ValueOf(jsoniter.RegisterFieldEncoderFunc),
		"RegisterTypeDecoder":                 reflect.ValueOf(jsoniter.RegisterTypeDecoder),
		"RegisterTypeDecoderFunc":             reflect.ValueOf(jsoniter.RegisterTypeDecoderFunc),
		"RegisterTypeEncoder":                 reflect.ValueOf(jsoniter.RegisterTypeEncoder),
		"RegisterTypeEncoderFunc":             reflect.ValueOf(jsoniter.RegisterTypeEncoderFunc),
		"StringValue":                         reflect.ValueOf(jsoniter.StringValue),
		"Unmarshal":                           reflect.ValueOf(jsoniter.Unmarshal),
		"UnmarshalFromString":                 reflect.ValueOf(jsoniter.UnmarshalFromString),
		"Valid":                               reflect.ValueOf(jsoniter.Valid),
		"Wrap":                                reflect.ValueOf(jsoniter.Wrap),
		"WrapFloat64":                         reflect.ValueOf(jsoniter.WrapFloat64),
		"WrapInt32":                           reflect.ValueOf(jsoniter.WrapInt32),
		"WrapInt64":                           reflect.ValueOf(jsoniter.WrapInt64),
		"WrapString":                          reflect.ValueOf(jsoniter.WrapString),
		"WrapUint32":                          reflect.ValueOf(jsoniter.WrapUint32),
		"WrapUint64":                          reflect.ValueOf(jsoniter.WrapUint64),

		// type definitions
		"API":              reflect.ValueOf((*jsoniter.API)(nil)),
		"Any":              reflect.ValueOf((*jsoniter.Any)(nil)),
		"Binding":          reflect.ValueOf((*jsoniter.Binding)(nil)),
		"Config":           reflect.ValueOf((*jsoniter.Config)(nil)),
		"Decoder":          reflect.ValueOf((*jsoniter.Decoder)(nil)),
		"DecoderExtension": reflect.ValueOf((*jsoniter.DecoderExtension)(nil)),
		"DecoderFunc":      reflect.ValueOf((*jsoniter.DecoderFunc)(nil)),
		"DummyExtension":   reflect.ValueOf((*jsoniter.DummyExtension)(nil)),
		"Encoder":          reflect.ValueOf((*jsoniter.Encoder)(nil)),
		"EncoderExtension": reflect.ValueOf((*jsoniter.EncoderExtension)(nil)),
		"EncoderFunc":      reflect.ValueOf((*jsoniter.EncoderFunc)(nil)),
		"Extension":        reflect.ValueOf((*jsoniter.Extension)(nil)),
		"IsEmbeddedPtrNil": reflect.ValueOf((*jsoniter.IsEmbeddedPtrNil)(nil)),
		"Iterator":         reflect.ValueOf((*jsoniter.Iterator)(nil)),
		"IteratorPool":     reflect.ValueOf((*jsoniter.IteratorPool)(nil)),
		"Number":           reflect.ValueOf((*jsoniter.Number)(nil)),
		"OptionalDecoder":  reflect.ValueOf((*jsoniter.OptionalDecoder)(nil)),
		"OptionalEncoder":  reflect.ValueOf((*jsoniter.OptionalEncoder)(nil)),
		"RawMessage":       reflect.ValueOf((*jsoniter.RawMessage)(nil)),
		"Stream":           reflect.ValueOf((*jsoniter.Stream)(nil)),
		"StreamPool":       reflect.ValueOf((*jsoniter.StreamPool)(nil)),
		"StructDescriptor": reflect.ValueOf((*jsoniter.StructDescriptor)(nil)),
		"ValDecoder":       reflect.ValueOf((*jsoniter.ValDecoder)(nil)),
		"ValEncoder":       reflect.ValueOf((*jsoniter.ValEncoder)(nil)),
		"ValueType":        reflect.ValueOf((*jsoniter.ValueType)(nil)),

		// interface wrapper definitions
		"_API":              reflect.ValueOf((*_github_com_json_iterator_go_API)(nil)),
		"_Any":              reflect.ValueOf((*_github_com_json_iterator_go_Any)(nil)),
		"_Extension":        reflect.ValueOf((*_github_com_json_iterator_go_Extension)(nil)),
		"_IsEmbeddedPtrNil": reflect.ValueOf((*_github_com_json_iterator_go_IsEmbeddedPtrNil)(nil)),
		"_IteratorPool":     reflect.ValueOf((*_github_com_json_iterator_go_IteratorPool)(nil)),
		"_StreamPool":       reflect.ValueOf((*_github_com_json_iterator_go_StreamPool)(nil)),
		"_ValDecoder":       reflect.ValueOf((*_github_com_json_iterator_go_ValDecoder)(nil)),
		"_ValEncoder":       reflect.ValueOf((*_github_com_json_iterator_go_ValEncoder)(nil)),
	}
}

// _github_com_json_iterator_go_API is an interface wrapper for API type
type _github_com_json_iterator_go_API struct {
	IValue               interface{}
	WBorrowIterator      func(data []byte) *jsoniter.Iterator
	WBorrowStream        func(writer io.Writer) *jsoniter.Stream
	WDecoderOf           func(typ reflect2.Type) jsoniter.ValDecoder
	WEncoderOf           func(typ reflect2.Type) jsoniter.ValEncoder
	WGet                 func(data []byte, path ...interface{}) jsoniter.Any
	WMarshal             func(v interface{}) ([]byte, error)
	WMarshalIndent       func(v interface{}, prefix string, indent string) ([]byte, error)
	WMarshalToString     func(v interface{}) (string, error)
	WNewDecoder          func(reader io.Reader) *jsoniter.Decoder
	WNewEncoder          func(writer io.Writer) *jsoniter.Encoder
	WRegisterExtension   func(extension jsoniter.Extension)
	WReturnIterator      func(iter *jsoniter.Iterator)
	WReturnStream        func(stream *jsoniter.Stream)
	WUnmarshal           func(data []byte, v interface{}) error
	WUnmarshalFromString func(str string, v interface{}) error
	WValid               func(data []byte) bool
}

func (W _github_com_json_iterator_go_API) BorrowIterator(data []byte) *jsoniter.Iterator {
	return W.WBorrowIterator(data)
}
func (W _github_com_json_iterator_go_API) BorrowStream(writer io.Writer) *jsoniter.Stream {
	return W.WBorrowStream(writer)
}
func (W _github_com_json_iterator_go_API) DecoderOf(typ reflect2.Type) jsoniter.ValDecoder {
	return W.WDecoderOf(typ)
}
func (W _github_com_json_iterator_go_API) EncoderOf(typ reflect2.Type) jsoniter.ValEncoder {
	return W.WEncoderOf(typ)
}
func (W _github_com_json_iterator_go_API) Get(data []byte, path ...interface{}) jsoniter.Any {
	return W.WGet(data, path...)
}
func (W _github_com_json_iterator_go_API) Marshal(v interface{}) ([]byte, error) {
	return W.WMarshal(v)
}
func (W _github_com_json_iterator_go_API) MarshalIndent(v interface{}, prefix string, indent string) ([]byte, error) {
	return W.WMarshalIndent(v, prefix, indent)
}
func (W _github_com_json_iterator_go_API) MarshalToString(v interface{}) (string, error) {
	return W.WMarshalToString(v)
}
func (W _github_com_json_iterator_go_API) NewDecoder(reader io.Reader) *jsoniter.Decoder {
	return W.WNewDecoder(reader)
}
func (W _github_com_json_iterator_go_API) NewEncoder(writer io.Writer) *jsoniter.Encoder {
	return W.WNewEncoder(writer)
}
func (W _github_com_json_iterator_go_API) RegisterExtension(extension jsoniter.Extension) {
	W.WRegisterExtension(extension)
}
func (W _github_com_json_iterator_go_API) ReturnIterator(iter *jsoniter.Iterator) {
	W.WReturnIterator(iter)
}
func (W _github_com_json_iterator_go_API) ReturnStream(stream *jsoniter.Stream) {
	W.WReturnStream(stream)
}
func (W _github_com_json_iterator_go_API) Unmarshal(data []byte, v interface{}) error {
	return W.WUnmarshal(data, v)
}
func (W _github_com_json_iterator_go_API) UnmarshalFromString(str string, v interface{}) error {
	return W.WUnmarshalFromString(str, v)
}
func (W _github_com_json_iterator_go_API) Valid(data []byte) bool {
	return W.WValid(data)
}

// _github_com_json_iterator_go_Any is an interface wrapper for Any type
type _github_com_json_iterator_go_Any struct {
	IValue        interface{}
	WGet          func(path ...interface{}) jsoniter.Any
	WGetInterface func() interface{}
	WKeys         func() []string
	WLastError    func() error
	WMustBeValid  func() jsoniter.Any
	WSize         func() int
	WToBool       func() bool
	WToFloat32    func() float32
	WToFloat64    func() float64
	WToInt        func() int
	WToInt32      func() int32
	WToInt64      func() int64
	WToString     func() string
	WToUint       func() uint
	WToUint32     func() uint32
	WToUint64     func() uint64
	WToVal        func(val interface{})
	WValueType    func() jsoniter.ValueType
	WWriteTo      func(stream *jsoniter.Stream)
}

func (W _github_com_json_iterator_go_Any) Get(path ...interface{}) jsoniter.Any {
	return W.WGet(path...)
}
func (W _github_com_json_iterator_go_Any) GetInterface() interface{} {
	return W.WGetInterface()
}
func (W _github_com_json_iterator_go_Any) Keys() []string {
	return W.WKeys()
}
func (W _github_com_json_iterator_go_Any) LastError() error {
	return W.WLastError()
}
func (W _github_com_json_iterator_go_Any) MustBeValid() jsoniter.Any {
	return W.WMustBeValid()
}
func (W _github_com_json_iterator_go_Any) Size() int {
	return W.WSize()
}
func (W _github_com_json_iterator_go_Any) ToBool() bool {
	return W.WToBool()
}
func (W _github_com_json_iterator_go_Any) ToFloat32() float32 {
	return W.WToFloat32()
}
func (W _github_com_json_iterator_go_Any) ToFloat64() float64 {
	return W.WToFloat64()
}
func (W _github_com_json_iterator_go_Any) ToInt() int {
	return W.WToInt()
}
func (W _github_com_json_iterator_go_Any) ToInt32() int32 {
	return W.WToInt32()
}
func (W _github_com_json_iterator_go_Any) ToInt64() int64 {
	return W.WToInt64()
}
func (W _github_com_json_iterator_go_Any) ToString() string {
	return W.WToString()
}
func (W _github_com_json_iterator_go_Any) ToUint() uint {
	return W.WToUint()
}
func (W _github_com_json_iterator_go_Any) ToUint32() uint32 {
	return W.WToUint32()
}
func (W _github_com_json_iterator_go_Any) ToUint64() uint64 {
	return W.WToUint64()
}
func (W _github_com_json_iterator_go_Any) ToVal(val interface{}) {
	W.WToVal(val)
}
func (W _github_com_json_iterator_go_Any) ValueType() jsoniter.ValueType {
	return W.WValueType()
}
func (W _github_com_json_iterator_go_Any) WriteTo(stream *jsoniter.Stream) {
	W.WWriteTo(stream)
}

// _github_com_json_iterator_go_Extension is an interface wrapper for Extension type
type _github_com_json_iterator_go_Extension struct {
	IValue                  interface{}
	WCreateDecoder          func(typ reflect2.Type) jsoniter.ValDecoder
	WCreateEncoder          func(typ reflect2.Type) jsoniter.ValEncoder
	WCreateMapKeyDecoder    func(typ reflect2.Type) jsoniter.ValDecoder
	WCreateMapKeyEncoder    func(typ reflect2.Type) jsoniter.ValEncoder
	WDecorateDecoder        func(typ reflect2.Type, decoder jsoniter.ValDecoder) jsoniter.ValDecoder
	WDecorateEncoder        func(typ reflect2.Type, encoder jsoniter.ValEncoder) jsoniter.ValEncoder
	WUpdateStructDescriptor func(structDescriptor *jsoniter.StructDescriptor)
}

func (W _github_com_json_iterator_go_Extension) CreateDecoder(typ reflect2.Type) jsoniter.ValDecoder {
	return W.WCreateDecoder(typ)
}
func (W _github_com_json_iterator_go_Extension) CreateEncoder(typ reflect2.Type) jsoniter.ValEncoder {
	return W.WCreateEncoder(typ)
}
func (W _github_com_json_iterator_go_Extension) CreateMapKeyDecoder(typ reflect2.Type) jsoniter.ValDecoder {
	return W.WCreateMapKeyDecoder(typ)
}
func (W _github_com_json_iterator_go_Extension) CreateMapKeyEncoder(typ reflect2.Type) jsoniter.ValEncoder {
	return W.WCreateMapKeyEncoder(typ)
}
func (W _github_com_json_iterator_go_Extension) DecorateDecoder(typ reflect2.Type, decoder jsoniter.ValDecoder) jsoniter.ValDecoder {
	return W.WDecorateDecoder(typ, decoder)
}
func (W _github_com_json_iterator_go_Extension) DecorateEncoder(typ reflect2.Type, encoder jsoniter.ValEncoder) jsoniter.ValEncoder {
	return W.WDecorateEncoder(typ, encoder)
}
func (W _github_com_json_iterator_go_Extension) UpdateStructDescriptor(structDescriptor *jsoniter.StructDescriptor) {
	W.WUpdateStructDescriptor(structDescriptor)
}

// _github_com_json_iterator_go_IsEmbeddedPtrNil is an interface wrapper for IsEmbeddedPtrNil type
type _github_com_json_iterator_go_IsEmbeddedPtrNil struct {
	IValue            interface{}
	WIsEmbeddedPtrNil func(ptr unsafe.Pointer) bool
}

func (W _github_com_json_iterator_go_IsEmbeddedPtrNil) IsEmbeddedPtrNil(ptr unsafe.Pointer) bool {
	return W.WIsEmbeddedPtrNil(ptr)
}

// _github_com_json_iterator_go_IteratorPool is an interface wrapper for IteratorPool type
type _github_com_json_iterator_go_IteratorPool struct {
	IValue          interface{}
	WBorrowIterator func(data []byte) *jsoniter.Iterator
	WReturnIterator func(iter *jsoniter.Iterator)
}

func (W _github_com_json_iterator_go_IteratorPool) BorrowIterator(data []byte) *jsoniter.Iterator {
	return W.WBorrowIterator(data)
}
func (W _github_com_json_iterator_go_IteratorPool) ReturnIterator(iter *jsoniter.Iterator) {
	W.WReturnIterator(iter)
}

// _github_com_json_iterator_go_StreamPool is an interface wrapper for StreamPool type
type _github_com_json_iterator_go_StreamPool struct {
	IValue        interface{}
	WBorrowStream func(writer io.Writer) *jsoniter.Stream
	WReturnStream func(stream *jsoniter.Stream)
}

func (W _github_com_json_iterator_go_StreamPool) BorrowStream(writer io.Writer) *jsoniter.Stream {
	return W.WBorrowStream(writer)
}
func (W _github_com_json_iterator_go_StreamPool) ReturnStream(stream *jsoniter.Stream) {
	W.WReturnStream(stream)
}

// _github_com_json_iterator_go_ValDecoder is an interface wrapper for ValDecoder type
type _github_com_json_iterator_go_ValDecoder struct {
	IValue  interface{}
	WDecode func(ptr unsafe.Pointer, iter *jsoniter.Iterator)
}

func (W _github_com_json_iterator_go_ValDecoder) Decode(ptr unsafe.Pointer, iter *jsoniter.Iterator) {
	W.WDecode(ptr, iter)
}

// _github_com_json_iterator_go_ValEncoder is an interface wrapper for ValEncoder type
type _github_com_json_iterator_go_ValEncoder struct {
	IValue   interface{}
	WEncode  func(ptr unsafe.Pointer, stream *jsoniter.Stream)
	WIsEmpty func(ptr unsafe.Pointer) bool
}

func (W _github_com_json_iterator_go_ValEncoder) Encode(ptr unsafe.Pointer, stream *jsoniter.Stream) {
	W.WEncode(ptr, stream)
}
func (W _github_com_json_iterator_go_ValEncoder) IsEmpty(ptr unsafe.Pointer) bool {
	return W.WIsEmpty(ptr)
}
