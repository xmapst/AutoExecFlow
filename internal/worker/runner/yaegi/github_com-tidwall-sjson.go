// Code generated by 'yaegi extract github.com/tidwall/sjson'. DO NOT EDIT.

package yaegi

import (
	"github.com/tidwall/sjson"
	"reflect"
)

func init() {
	Symbols["github.com/tidwall/sjson/sjson"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Delete":             reflect.ValueOf(sjson.Delete),
		"DeleteBytes":        reflect.ValueOf(sjson.DeleteBytes),
		"Set":                reflect.ValueOf(sjson.Set),
		"SetBytes":           reflect.ValueOf(sjson.SetBytes),
		"SetBytesOptions":    reflect.ValueOf(sjson.SetBytesOptions),
		"SetOptions":         reflect.ValueOf(sjson.SetOptions),
		"SetRaw":             reflect.ValueOf(sjson.SetRaw),
		"SetRawBytes":        reflect.ValueOf(sjson.SetRawBytes),
		"SetRawBytesOptions": reflect.ValueOf(sjson.SetRawBytesOptions),
		"SetRawOptions":      reflect.ValueOf(sjson.SetRawOptions),

		// type definitions
		"Options": reflect.ValueOf((*sjson.Options)(nil)),
	}
}
