// Code generated by 'yaegi extract google.golang.org/grpc'. DO NOT EDIT.

package libs

import (
	"context"
	"go/constant"
	"go/token"
	"google.golang.org/grpc"
	"google.golang.org/grpc/metadata"
	"io"
	"reflect"
)

func init() {
	Symbols["google.golang.org/grpc/grpc"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CallContentSubtype":                  reflect.ValueOf(grpc.CallContentSubtype),
		"CallCustomCodec":                     reflect.ValueOf(grpc.CallCustomCodec),
		"ChainStreamInterceptor":              reflect.ValueOf(grpc.ChainStreamInterceptor),
		"ChainUnaryInterceptor":               reflect.ValueOf(grpc.ChainUnaryInterceptor),
		"ClientSupportedCompressors":          reflect.ValueOf(grpc.ClientSupportedCompressors),
		"Code":                                reflect.ValueOf(grpc.Code),
		"ConnectionTimeout":                   reflect.ValueOf(grpc.ConnectionTimeout),
		"Creds":                               reflect.ValueOf(grpc.Creds),
		"CustomCodec":                         reflect.ValueOf(grpc.CustomCodec),
		"DefaultBackoffConfig":                reflect.ValueOf(&grpc.DefaultBackoffConfig).Elem(),
		"Dial":                                reflect.ValueOf(grpc.Dial),
		"DialContext":                         reflect.ValueOf(grpc.DialContext),
		"EnableTracing":                       reflect.ValueOf(&grpc.EnableTracing).Elem(),
		"ErrClientConnClosing":                reflect.ValueOf(&grpc.ErrClientConnClosing).Elem(),
		"ErrClientConnTimeout":                reflect.ValueOf(&grpc.ErrClientConnTimeout).Elem(),
		"ErrServerStopped":                    reflect.ValueOf(&grpc.ErrServerStopped).Elem(),
		"ErrorDesc":                           reflect.ValueOf(grpc.ErrorDesc),
		"Errorf":                              reflect.ValueOf(grpc.Errorf),
		"FailFast":                            reflect.ValueOf(grpc.FailFast),
		"FailOnNonTempDialError":              reflect.ValueOf(grpc.FailOnNonTempDialError),
		"ForceCodec":                          reflect.ValueOf(grpc.ForceCodec),
		"ForceCodecV2":                        reflect.ValueOf(grpc.ForceCodecV2),
		"ForceServerCodec":                    reflect.ValueOf(grpc.ForceServerCodec),
		"ForceServerCodecV2":                  reflect.ValueOf(grpc.ForceServerCodecV2),
		"Header":                              reflect.ValueOf(grpc.Header),
		"HeaderTableSize":                     reflect.ValueOf(grpc.HeaderTableSize),
		"InTapHandle":                         reflect.ValueOf(grpc.InTapHandle),
		"InitialConnWindowSize":               reflect.ValueOf(grpc.InitialConnWindowSize),
		"InitialWindowSize":                   reflect.ValueOf(grpc.InitialWindowSize),
		"Invoke":                              reflect.ValueOf(grpc.Invoke),
		"KeepaliveEnforcementPolicy":          reflect.ValueOf(grpc.KeepaliveEnforcementPolicy),
		"KeepaliveParams":                     reflect.ValueOf(grpc.KeepaliveParams),
		"MaxCallRecvMsgSize":                  reflect.ValueOf(grpc.MaxCallRecvMsgSize),
		"MaxCallSendMsgSize":                  reflect.ValueOf(grpc.MaxCallSendMsgSize),
		"MaxConcurrentStreams":                reflect.ValueOf(grpc.MaxConcurrentStreams),
		"MaxHeaderListSize":                   reflect.ValueOf(grpc.MaxHeaderListSize),
		"MaxMsgSize":                          reflect.ValueOf(grpc.MaxMsgSize),
		"MaxRecvMsgSize":                      reflect.ValueOf(grpc.MaxRecvMsgSize),
		"MaxRetryRPCBufferSize":               reflect.ValueOf(grpc.MaxRetryRPCBufferSize),
		"MaxSendMsgSize":                      reflect.ValueOf(grpc.MaxSendMsgSize),
		"Method":                              reflect.ValueOf(grpc.Method),
		"MethodFromServerStream":              reflect.ValueOf(grpc.MethodFromServerStream),
		"NewClient":                           reflect.ValueOf(grpc.NewClient),
		"NewClientStream":                     reflect.ValueOf(grpc.NewClientStream),
		"NewContextWithServerTransportStream": reflect.ValueOf(grpc.NewContextWithServerTransportStream),
		"NewGZIPCompressor":                   reflect.ValueOf(grpc.NewGZIPCompressor),
		"NewGZIPCompressorWithLevel":          reflect.ValueOf(grpc.NewGZIPCompressorWithLevel),
		"NewGZIPDecompressor":                 reflect.ValueOf(grpc.NewGZIPDecompressor),
		"NewServer":                           reflect.ValueOf(grpc.NewServer),
		"NumStreamWorkers":                    reflect.ValueOf(grpc.NumStreamWorkers),
		"OnFinish":                            reflect.ValueOf(grpc.OnFinish),
		"Peer":                                reflect.ValueOf(grpc.Peer),
		"PerRPCCredentials":                   reflect.ValueOf(grpc.PerRPCCredentials),
		"PickFirstBalancerName":               reflect.ValueOf(&grpc.PickFirstBalancerName).Elem(),
		"RPCCompressor":                       reflect.ValueOf(grpc.RPCCompressor),
		"RPCDecompressor":                     reflect.ValueOf(grpc.RPCDecompressor),
		"ReadBufferSize":                      reflect.ValueOf(grpc.ReadBufferSize),
		"SendHeader":                          reflect.ValueOf(grpc.SendHeader),
		"ServerTransportStreamFromContext":    reflect.ValueOf(grpc.ServerTransportStreamFromContext),
		"SetHeader":                           reflect.ValueOf(grpc.SetHeader),
		"SetSendCompressor":                   reflect.ValueOf(grpc.SetSendCompressor),
		"SetTrailer":                          reflect.ValueOf(grpc.SetTrailer),
		"SharedWriteBuffer":                   reflect.ValueOf(grpc.SharedWriteBuffer),
		"StaticMethod":                        reflect.ValueOf(grpc.StaticMethod),
		"StatsHandler":                        reflect.ValueOf(grpc.StatsHandler),
		"StreamInterceptor":                   reflect.ValueOf(grpc.StreamInterceptor),
		"SupportPackageIsVersion3":            reflect.ValueOf(grpc.SupportPackageIsVersion3),
		"SupportPackageIsVersion4":            reflect.ValueOf(grpc.SupportPackageIsVersion4),
		"SupportPackageIsVersion5":            reflect.ValueOf(grpc.SupportPackageIsVersion5),
		"SupportPackageIsVersion6":            reflect.ValueOf(grpc.SupportPackageIsVersion6),
		"SupportPackageIsVersion7":            reflect.ValueOf(grpc.SupportPackageIsVersion7),
		"SupportPackageIsVersion8":            reflect.ValueOf(grpc.SupportPackageIsVersion8),
		"SupportPackageIsVersion9":            reflect.ValueOf(grpc.SupportPackageIsVersion9),
		"Trailer":                             reflect.ValueOf(grpc.Trailer),
		"UnaryInterceptor":                    reflect.ValueOf(grpc.UnaryInterceptor),
		"UnknownServiceHandler":               reflect.ValueOf(grpc.UnknownServiceHandler),
		"UseCompressor":                       reflect.ValueOf(grpc.UseCompressor),
		"Version":                             reflect.ValueOf(constant.MakeFromLiteral("\"1.72.0\"", token.STRING, 0)),
		"WaitForHandlers":                     reflect.ValueOf(grpc.WaitForHandlers),
		"WaitForReady":                        reflect.ValueOf(grpc.WaitForReady),
		"WithAuthority":                       reflect.ValueOf(grpc.WithAuthority),
		"WithBackoffConfig":                   reflect.ValueOf(grpc.WithBackoffConfig),
		"WithBackoffMaxDelay":                 reflect.ValueOf(grpc.WithBackoffMaxDelay),
		"WithBlock":                           reflect.ValueOf(grpc.WithBlock),
		"WithChainStreamInterceptor":          reflect.ValueOf(grpc.WithChainStreamInterceptor),
		"WithChainUnaryInterceptor":           reflect.ValueOf(grpc.WithChainUnaryInterceptor),
		"WithChannelzParentID":                reflect.ValueOf(grpc.WithChannelzParentID),
		"WithCodec":                           reflect.ValueOf(grpc.WithCodec),
		"WithCompressor":                      reflect.ValueOf(grpc.WithCompressor),
		"WithConnectParams":                   reflect.ValueOf(grpc.WithConnectParams),
		"WithContextDialer":                   reflect.ValueOf(grpc.WithContextDialer),
		"WithCredentialsBundle":               reflect.ValueOf(grpc.WithCredentialsBundle),
		"WithDecompressor":                    reflect.ValueOf(grpc.WithDecompressor),
		"WithDefaultCallOptions":              reflect.ValueOf(grpc.WithDefaultCallOptions),
		"WithDefaultServiceConfig":            reflect.ValueOf(grpc.WithDefaultServiceConfig),
		"WithDialer":                          reflect.ValueOf(grpc.WithDialer),
		"WithDisableHealthCheck":              reflect.ValueOf(grpc.WithDisableHealthCheck),
		"WithDisableRetry":                    reflect.ValueOf(grpc.WithDisableRetry),
		"WithDisableServiceConfig":            reflect.ValueOf(grpc.WithDisableServiceConfig),
		"WithIdleTimeout":                     reflect.ValueOf(grpc.WithIdleTimeout),
		"WithInitialConnWindowSize":           reflect.ValueOf(grpc.WithInitialConnWindowSize),
		"WithInitialWindowSize":               reflect.ValueOf(grpc.WithInitialWindowSize),
		"WithInsecure":                        reflect.ValueOf(grpc.WithInsecure),
		"WithKeepaliveParams":                 reflect.ValueOf(grpc.WithKeepaliveParams),
		"WithLocalDNSResolution":              reflect.ValueOf(grpc.WithLocalDNSResolution),
		"WithMaxCallAttempts":                 reflect.ValueOf(grpc.WithMaxCallAttempts),
		"WithMaxHeaderListSize":               reflect.ValueOf(grpc.WithMaxHeaderListSize),
		"WithMaxMsgSize":                      reflect.ValueOf(grpc.WithMaxMsgSize),
		"WithNoProxy":                         reflect.ValueOf(grpc.WithNoProxy),
		"WithPerRPCCredentials":               reflect.ValueOf(grpc.WithPerRPCCredentials),
		"WithReadBufferSize":                  reflect.ValueOf(grpc.WithReadBufferSize),
		"WithResolvers":                       reflect.ValueOf(grpc.WithResolvers),
		"WithReturnConnectionError":           reflect.ValueOf(grpc.WithReturnConnectionError),
		"WithSharedWriteBuffer":               reflect.ValueOf(grpc.WithSharedWriteBuffer),
		"WithStatsHandler":                    reflect.ValueOf(grpc.WithStatsHandler),
		"WithStreamInterceptor":               reflect.ValueOf(grpc.WithStreamInterceptor),
		"WithTimeout":                         reflect.ValueOf(grpc.WithTimeout),
		"WithTransportCredentials":            reflect.ValueOf(grpc.WithTransportCredentials),
		"WithUnaryInterceptor":                reflect.ValueOf(grpc.WithUnaryInterceptor),
		"WithUserAgent":                       reflect.ValueOf(grpc.WithUserAgent),
		"WithWriteBufferSize":                 reflect.ValueOf(grpc.WithWriteBufferSize),
		"WriteBufferSize":                     reflect.ValueOf(grpc.WriteBufferSize),

		// type definitions
		"BackoffConfig":                   reflect.ValueOf((*grpc.BackoffConfig)(nil)),
		"CallOption":                      reflect.ValueOf((*grpc.CallOption)(nil)),
		"ClientConn":                      reflect.ValueOf((*grpc.ClientConn)(nil)),
		"ClientConnInterface":             reflect.ValueOf((*grpc.ClientConnInterface)(nil)),
		"ClientStream":                    reflect.ValueOf((*grpc.ClientStream)(nil)),
		"Codec":                           reflect.ValueOf((*grpc.Codec)(nil)),
		"Compressor":                      reflect.ValueOf((*grpc.Compressor)(nil)),
		"CompressorCallOption":            reflect.ValueOf((*grpc.CompressorCallOption)(nil)),
		"ConnectParams":                   reflect.ValueOf((*grpc.ConnectParams)(nil)),
		"ContentSubtypeCallOption":        reflect.ValueOf((*grpc.ContentSubtypeCallOption)(nil)),
		"CustomCodecCallOption":           reflect.ValueOf((*grpc.CustomCodecCallOption)(nil)),
		"Decompressor":                    reflect.ValueOf((*grpc.Decompressor)(nil)),
		"DialOption":                      reflect.ValueOf((*grpc.DialOption)(nil)),
		"EmptyCallOption":                 reflect.ValueOf((*grpc.EmptyCallOption)(nil)),
		"EmptyDialOption":                 reflect.ValueOf((*grpc.EmptyDialOption)(nil)),
		"EmptyServerOption":               reflect.ValueOf((*grpc.EmptyServerOption)(nil)),
		"FailFastCallOption":              reflect.ValueOf((*grpc.FailFastCallOption)(nil)),
		"ForceCodecCallOption":            reflect.ValueOf((*grpc.ForceCodecCallOption)(nil)),
		"ForceCodecV2CallOption":          reflect.ValueOf((*grpc.ForceCodecV2CallOption)(nil)),
		"HeaderCallOption":                reflect.ValueOf((*grpc.HeaderCallOption)(nil)),
		"MaxHeaderListSizeDialOption":     reflect.ValueOf((*grpc.MaxHeaderListSizeDialOption)(nil)),
		"MaxHeaderListSizeServerOption":   reflect.ValueOf((*grpc.MaxHeaderListSizeServerOption)(nil)),
		"MaxRecvMsgSizeCallOption":        reflect.ValueOf((*grpc.MaxRecvMsgSizeCallOption)(nil)),
		"MaxRetryRPCBufferSizeCallOption": reflect.ValueOf((*grpc.MaxRetryRPCBufferSizeCallOption)(nil)),
		"MaxSendMsgSizeCallOption":        reflect.ValueOf((*grpc.MaxSendMsgSizeCallOption)(nil)),
		"MethodConfig":                    reflect.ValueOf((*grpc.MethodConfig)(nil)),
		"MethodDesc":                      reflect.ValueOf((*grpc.MethodDesc)(nil)),
		"MethodHandler":                   reflect.ValueOf((*grpc.MethodHandler)(nil)),
		"MethodInfo":                      reflect.ValueOf((*grpc.MethodInfo)(nil)),
		"OnFinishCallOption":              reflect.ValueOf((*grpc.OnFinishCallOption)(nil)),
		"PeerCallOption":                  reflect.ValueOf((*grpc.PeerCallOption)(nil)),
		"PerRPCCredsCallOption":           reflect.ValueOf((*grpc.PerRPCCredsCallOption)(nil)),
		"PreparedMsg":                     reflect.ValueOf((*grpc.PreparedMsg)(nil)),
		"Server":                          reflect.ValueOf((*grpc.Server)(nil)),
		"ServerOption":                    reflect.ValueOf((*grpc.ServerOption)(nil)),
		"ServerStream":                    reflect.ValueOf((*grpc.ServerStream)(nil)),
		"ServerTransportStream":           reflect.ValueOf((*grpc.ServerTransportStream)(nil)),
		"ServiceConfig":                   reflect.ValueOf((*grpc.ServiceConfig)(nil)),
		"ServiceDesc":                     reflect.ValueOf((*grpc.ServiceDesc)(nil)),
		"ServiceInfo":                     reflect.ValueOf((*grpc.ServiceInfo)(nil)),
		"ServiceRegistrar":                reflect.ValueOf((*grpc.ServiceRegistrar)(nil)),
		"StaticMethodCallOption":          reflect.ValueOf((*grpc.StaticMethodCallOption)(nil)),
		"Stream":                          reflect.ValueOf((*grpc.Stream)(nil)),
		"StreamClientInterceptor":         reflect.ValueOf((*grpc.StreamClientInterceptor)(nil)),
		"StreamDesc":                      reflect.ValueOf((*grpc.StreamDesc)(nil)),
		"StreamHandler":                   reflect.ValueOf((*grpc.StreamHandler)(nil)),
		"StreamServerInfo":                reflect.ValueOf((*grpc.StreamServerInfo)(nil)),
		"StreamServerInterceptor":         reflect.ValueOf((*grpc.StreamServerInterceptor)(nil)),
		"Streamer":                        reflect.ValueOf((*grpc.Streamer)(nil)),
		"TrailerCallOption":               reflect.ValueOf((*grpc.TrailerCallOption)(nil)),
		"UnaryClientInterceptor":          reflect.ValueOf((*grpc.UnaryClientInterceptor)(nil)),
		"UnaryHandler":                    reflect.ValueOf((*grpc.UnaryHandler)(nil)),
		"UnaryInvoker":                    reflect.ValueOf((*grpc.UnaryInvoker)(nil)),
		"UnaryServerInfo":                 reflect.ValueOf((*grpc.UnaryServerInfo)(nil)),
		"UnaryServerInterceptor":          reflect.ValueOf((*grpc.UnaryServerInterceptor)(nil)),

		// interface wrapper definitions
		"_CallOption":            reflect.ValueOf((*_google_golang_org_grpc_CallOption)(nil)),
		"_ClientConnInterface":   reflect.ValueOf((*_google_golang_org_grpc_ClientConnInterface)(nil)),
		"_ClientStream":          reflect.ValueOf((*_google_golang_org_grpc_ClientStream)(nil)),
		"_Codec":                 reflect.ValueOf((*_google_golang_org_grpc_Codec)(nil)),
		"_Compressor":            reflect.ValueOf((*_google_golang_org_grpc_Compressor)(nil)),
		"_Decompressor":          reflect.ValueOf((*_google_golang_org_grpc_Decompressor)(nil)),
		"_DialOption":            reflect.ValueOf((*_google_golang_org_grpc_DialOption)(nil)),
		"_ServerOption":          reflect.ValueOf((*_google_golang_org_grpc_ServerOption)(nil)),
		"_ServerStream":          reflect.ValueOf((*_google_golang_org_grpc_ServerStream)(nil)),
		"_ServerTransportStream": reflect.ValueOf((*_google_golang_org_grpc_ServerTransportStream)(nil)),
		"_ServiceRegistrar":      reflect.ValueOf((*_google_golang_org_grpc_ServiceRegistrar)(nil)),
		"_Stream":                reflect.ValueOf((*_google_golang_org_grpc_Stream)(nil)),
	}
}

// _google_golang_org_grpc_CallOption is an interface wrapper for CallOption type
type _google_golang_org_grpc_CallOption struct {
	IValue interface{}
}

// _google_golang_org_grpc_ClientConnInterface is an interface wrapper for ClientConnInterface type
type _google_golang_org_grpc_ClientConnInterface struct {
	IValue     interface{}
	WInvoke    func(ctx context.Context, method string, args any, reply any, opts ...grpc.CallOption) error
	WNewStream func(ctx context.Context, desc *grpc.StreamDesc, method string, opts ...grpc.CallOption) (grpc.ClientStream, error)
}

func (W _google_golang_org_grpc_ClientConnInterface) Invoke(ctx context.Context, method string, args any, reply any, opts ...grpc.CallOption) error {
	return W.WInvoke(ctx, method, args, reply, opts...)
}
func (W _google_golang_org_grpc_ClientConnInterface) NewStream(ctx context.Context, desc *grpc.StreamDesc, method string, opts ...grpc.CallOption) (grpc.ClientStream, error) {
	return W.WNewStream(ctx, desc, method, opts...)
}

// _google_golang_org_grpc_ClientStream is an interface wrapper for ClientStream type
type _google_golang_org_grpc_ClientStream struct {
	IValue     interface{}
	WCloseSend func() error
	WContext   func() context.Context
	WHeader    func() (metadata.MD, error)
	WRecvMsg   func(m any) error
	WSendMsg   func(m any) error
	WTrailer   func() metadata.MD
}

func (W _google_golang_org_grpc_ClientStream) CloseSend() error {
	return W.WCloseSend()
}
func (W _google_golang_org_grpc_ClientStream) Context() context.Context {
	return W.WContext()
}
func (W _google_golang_org_grpc_ClientStream) Header() (metadata.MD, error) {
	return W.WHeader()
}
func (W _google_golang_org_grpc_ClientStream) RecvMsg(m any) error {
	return W.WRecvMsg(m)
}
func (W _google_golang_org_grpc_ClientStream) SendMsg(m any) error {
	return W.WSendMsg(m)
}
func (W _google_golang_org_grpc_ClientStream) Trailer() metadata.MD {
	return W.WTrailer()
}

// _google_golang_org_grpc_Codec is an interface wrapper for Codec type
type _google_golang_org_grpc_Codec struct {
	IValue     interface{}
	WMarshal   func(v any) ([]byte, error)
	WString    func() string
	WUnmarshal func(data []byte, v any) error
}

func (W _google_golang_org_grpc_Codec) Marshal(v any) ([]byte, error) {
	return W.WMarshal(v)
}
func (W _google_golang_org_grpc_Codec) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _google_golang_org_grpc_Codec) Unmarshal(data []byte, v any) error {
	return W.WUnmarshal(data, v)
}

// _google_golang_org_grpc_Compressor is an interface wrapper for Compressor type
type _google_golang_org_grpc_Compressor struct {
	IValue interface{}
	WDo    func(w io.Writer, p []byte) error
	WType  func() string
}

func (W _google_golang_org_grpc_Compressor) Do(w io.Writer, p []byte) error {
	return W.WDo(w, p)
}
func (W _google_golang_org_grpc_Compressor) Type() string {
	return W.WType()
}

// _google_golang_org_grpc_Decompressor is an interface wrapper for Decompressor type
type _google_golang_org_grpc_Decompressor struct {
	IValue interface{}
	WDo    func(r io.Reader) ([]byte, error)
	WType  func() string
}

func (W _google_golang_org_grpc_Decompressor) Do(r io.Reader) ([]byte, error) {
	return W.WDo(r)
}
func (W _google_golang_org_grpc_Decompressor) Type() string {
	return W.WType()
}

// _google_golang_org_grpc_DialOption is an interface wrapper for DialOption type
type _google_golang_org_grpc_DialOption struct {
	IValue interface{}
}

// _google_golang_org_grpc_ServerOption is an interface wrapper for ServerOption type
type _google_golang_org_grpc_ServerOption struct {
	IValue interface{}
}

// _google_golang_org_grpc_ServerStream is an interface wrapper for ServerStream type
type _google_golang_org_grpc_ServerStream struct {
	IValue      interface{}
	WContext    func() context.Context
	WRecvMsg    func(m any) error
	WSendHeader func(a0 metadata.MD) error
	WSendMsg    func(m any) error
	WSetHeader  func(a0 metadata.MD) error
	WSetTrailer func(a0 metadata.MD)
}

func (W _google_golang_org_grpc_ServerStream) Context() context.Context {
	return W.WContext()
}
func (W _google_golang_org_grpc_ServerStream) RecvMsg(m any) error {
	return W.WRecvMsg(m)
}
func (W _google_golang_org_grpc_ServerStream) SendHeader(a0 metadata.MD) error {
	return W.WSendHeader(a0)
}
func (W _google_golang_org_grpc_ServerStream) SendMsg(m any) error {
	return W.WSendMsg(m)
}
func (W _google_golang_org_grpc_ServerStream) SetHeader(a0 metadata.MD) error {
	return W.WSetHeader(a0)
}
func (W _google_golang_org_grpc_ServerStream) SetTrailer(a0 metadata.MD) {
	W.WSetTrailer(a0)
}

// _google_golang_org_grpc_ServerTransportStream is an interface wrapper for ServerTransportStream type
type _google_golang_org_grpc_ServerTransportStream struct {
	IValue      interface{}
	WMethod     func() string
	WSendHeader func(md metadata.MD) error
	WSetHeader  func(md metadata.MD) error
	WSetTrailer func(md metadata.MD) error
}

func (W _google_golang_org_grpc_ServerTransportStream) Method() string {
	return W.WMethod()
}
func (W _google_golang_org_grpc_ServerTransportStream) SendHeader(md metadata.MD) error {
	return W.WSendHeader(md)
}
func (W _google_golang_org_grpc_ServerTransportStream) SetHeader(md metadata.MD) error {
	return W.WSetHeader(md)
}
func (W _google_golang_org_grpc_ServerTransportStream) SetTrailer(md metadata.MD) error {
	return W.WSetTrailer(md)
}

// _google_golang_org_grpc_ServiceRegistrar is an interface wrapper for ServiceRegistrar type
type _google_golang_org_grpc_ServiceRegistrar struct {
	IValue           interface{}
	WRegisterService func(desc *grpc.ServiceDesc, impl any)
}

func (W _google_golang_org_grpc_ServiceRegistrar) RegisterService(desc *grpc.ServiceDesc, impl any) {
	W.WRegisterService(desc, impl)
}

// _google_golang_org_grpc_Stream is an interface wrapper for Stream type
type _google_golang_org_grpc_Stream struct {
	IValue   interface{}
	WContext func() context.Context
	WRecvMsg func(m any) error
	WSendMsg func(m any) error
}

func (W _google_golang_org_grpc_Stream) Context() context.Context {
	return W.WContext()
}
func (W _google_golang_org_grpc_Stream) RecvMsg(m any) error {
	return W.WRecvMsg(m)
}
func (W _google_golang_org_grpc_Stream) SendMsg(m any) error {
	return W.WSendMsg(m)
}
