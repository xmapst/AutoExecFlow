// Code generated by 'yaegi extract github.com/robfig/cron/v3'. DO NOT EDIT.

package libs

import (
	"github.com/robfig/cron/v3"
	"reflect"
	"time"
)

func init() {
	Symbols["github.com/robfig/cron/v3/cron"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DefaultLogger":       reflect.ValueOf(&cron.DefaultLogger).Elem(),
		"DelayIfStillRunning": reflect.ValueOf(cron.DelayIfStillRunning),
		"Descriptor":          reflect.ValueOf(cron.Descriptor),
		"DiscardLogger":       reflect.ValueOf(&cron.DiscardLogger).Elem(),
		"Dom":                 reflect.ValueOf(cron.Dom),
		"Dow":                 reflect.ValueOf(cron.Dow),
		"DowOptional":         reflect.ValueOf(cron.DowOptional),
		"Every":               reflect.ValueOf(cron.Every),
		"Hour":                reflect.ValueOf(cron.Hour),
		"Minute":              reflect.ValueOf(cron.Minute),
		"Month":               reflect.ValueOf(cron.Month),
		"New":                 reflect.ValueOf(cron.New),
		"NewChain":            reflect.ValueOf(cron.NewChain),
		"NewParser":           reflect.ValueOf(cron.NewParser),
		"ParseStandard":       reflect.ValueOf(cron.ParseStandard),
		"PrintfLogger":        reflect.ValueOf(cron.PrintfLogger),
		"Recover":             reflect.ValueOf(cron.Recover),
		"Second":              reflect.ValueOf(cron.Second),
		"SecondOptional":      reflect.ValueOf(cron.SecondOptional),
		"SkipIfStillRunning":  reflect.ValueOf(cron.SkipIfStillRunning),
		"VerbosePrintfLogger": reflect.ValueOf(cron.VerbosePrintfLogger),
		"WithChain":           reflect.ValueOf(cron.WithChain),
		"WithLocation":        reflect.ValueOf(cron.WithLocation),
		"WithLogger":          reflect.ValueOf(cron.WithLogger),
		"WithParser":          reflect.ValueOf(cron.WithParser),
		"WithSeconds":         reflect.ValueOf(cron.WithSeconds),

		// type definitions
		"Chain":                 reflect.ValueOf((*cron.Chain)(nil)),
		"ConstantDelaySchedule": reflect.ValueOf((*cron.ConstantDelaySchedule)(nil)),
		"Cron":                  reflect.ValueOf((*cron.Cron)(nil)),
		"Entry":                 reflect.ValueOf((*cron.Entry)(nil)),
		"EntryID":               reflect.ValueOf((*cron.EntryID)(nil)),
		"FuncJob":               reflect.ValueOf((*cron.FuncJob)(nil)),
		"Job":                   reflect.ValueOf((*cron.Job)(nil)),
		"JobWrapper":            reflect.ValueOf((*cron.JobWrapper)(nil)),
		"Logger":                reflect.ValueOf((*cron.Logger)(nil)),
		"Option":                reflect.ValueOf((*cron.Option)(nil)),
		"ParseOption":           reflect.ValueOf((*cron.ParseOption)(nil)),
		"Parser":                reflect.ValueOf((*cron.Parser)(nil)),
		"Schedule":              reflect.ValueOf((*cron.Schedule)(nil)),
		"ScheduleParser":        reflect.ValueOf((*cron.ScheduleParser)(nil)),
		"SpecSchedule":          reflect.ValueOf((*cron.SpecSchedule)(nil)),

		// interface wrapper definitions
		"_Job":            reflect.ValueOf((*_github_com_robfig_cron_v3_Job)(nil)),
		"_Logger":         reflect.ValueOf((*_github_com_robfig_cron_v3_Logger)(nil)),
		"_Schedule":       reflect.ValueOf((*_github_com_robfig_cron_v3_Schedule)(nil)),
		"_ScheduleParser": reflect.ValueOf((*_github_com_robfig_cron_v3_ScheduleParser)(nil)),
	}
}

// _github_com_robfig_cron_v3_Job is an interface wrapper for Job type
type _github_com_robfig_cron_v3_Job struct {
	IValue interface{}
	WRun   func()
}

func (W _github_com_robfig_cron_v3_Job) Run() {
	W.WRun()
}

// _github_com_robfig_cron_v3_Logger is an interface wrapper for Logger type
type _github_com_robfig_cron_v3_Logger struct {
	IValue interface{}
	WError func(err error, msg string, keysAndValues ...interface{})
	WInfo  func(msg string, keysAndValues ...interface{})
}

func (W _github_com_robfig_cron_v3_Logger) Error(err error, msg string, keysAndValues ...interface{}) {
	W.WError(err, msg, keysAndValues...)
}
func (W _github_com_robfig_cron_v3_Logger) Info(msg string, keysAndValues ...interface{}) {
	W.WInfo(msg, keysAndValues...)
}

// _github_com_robfig_cron_v3_Schedule is an interface wrapper for Schedule type
type _github_com_robfig_cron_v3_Schedule struct {
	IValue interface{}
	WNext  func(a0 time.Time) time.Time
}

func (W _github_com_robfig_cron_v3_Schedule) Next(a0 time.Time) time.Time {
	return W.WNext(a0)
}

// _github_com_robfig_cron_v3_ScheduleParser is an interface wrapper for ScheduleParser type
type _github_com_robfig_cron_v3_ScheduleParser struct {
	IValue interface{}
	WParse func(spec string) (cron.Schedule, error)
}

func (W _github_com_robfig_cron_v3_ScheduleParser) Parse(spec string) (cron.Schedule, error) {
	return W.WParse(spec)
}
