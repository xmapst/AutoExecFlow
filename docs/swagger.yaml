openapi: 3.0.1
info:
  title: Auto Exec Flow
  description: "An `API` for cross-platform custom orchestration of execution steps\
    \ without any third-party dependencies. Based on `DAG`, it implements the scheduling\
    \ function of sequential execution of dependent steps and concurrent execution\
    \ of non-dependent steps. <br /><br /> \
    \ It provides `API` remote operation mode, batch execution of `Shell` , `Powershell` ,\
    \ `Python` and other commands, and easily completes common management tasks such as\
    \ running automated operation and maintenance scripts, polling processes, installing\
    \ or uninstalling software, updating applications, and installing patches.
    "
  contact:
    name: AutoExecFlow
    url: https://github.com/xmapst/AutoExecFlow/issues
  license:
    name: GPL-3.0
    url: https://github.com/xmapst/AutoExecFlow/blob/main/LICENSE
  version: "1.0"
paths:
  /api/v1/pool:
    get:
      tags:
        - Pool
      summary: Detail
      description: Get task pool details
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    $ref: '#/components/schemas/poolResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    $ref: '#/components/schemas/poolResponseJson'
        "500":
          description: Internal Server Error
    post:
      tags:
        - Pool
      summary: Setting
      description: Configuring the Task Pool Size
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: body
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/poolRequestYaml'
          application/json:
            schema:
              $ref: '#/components/schemas/poolRequestJson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/poolRequestJson'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    $ref: '#/components/schemas/poolResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    $ref: '#/components/schemas/poolResponseJson'
        "500":
          description: Internal Server Error
  /api/v1/pty:
    get:
      tags:
        - System
      summary: Terminal
      description: websocket terminal
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
  /api/v1/task:
    get:
      tags:
        - Task
      summary: List
      description: Get the task list
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: page
          in: query
          description: page number
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: size number
          schema:
            type: integer
            default: 100
        - name: prefix
          in: query
          description: keyword prefix
          schema:
            type: string
            default: ''
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    $ref: '#/components/schemas/taskListResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    $ref: '#/components/schemas/taskListResponseJson'
        "500":
          description: Internal Server Error
    post:
      tags:
        - Task
      summary: Create
      description: Create a task
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: name
          in: query
          description: task name
          schema:
            type: string
            default: task_name
        - name: description
          in: query
          description: task description
          schema:
            type: string
            default: task_description
        - name: async
          in: query
          description: task asynchronously
          schema:
            type: boolean
            default: false
        - name: timeout
          in: query
          description: task timeout
          schema:
            type: string
            default: 3m
        - name: disable
          in: query
          description: task disable
          schema:
            type: boolean
            default: false
        - name: env
          in: query
          description: task envs
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: body
        content:
          application/yaml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/stepRequestYaml'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/stepRequestJson'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/stepRequestJson'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    $ref: '#/components/schemas/taskCreateResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    $ref: '#/components/schemas/taskCreateResponseJson'
        "500":
          description: Internal Server Error
  /api/v1/task/{task}:
    put:
      tags:
        - Task
      summary: Manager
      description: "Task management, can terminate, suspend, and resolve"
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
        - name: action
          in: query
          description: management action
          schema:
            type: string
            default: paused
            enum:
              - paused
              - kill
              - pause
              - resume
        - name: duration
          in: query
          description: "how long to pause; if empty, manual continuation is required"
          schema:
            type: string
            default: 1m
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
        "500":
          description: Internal Server Error
    get:
      tags:
        - Step
      summary: List
      description: Get the list of steps for a specified task
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    type: array
                    items:
                      $ref: '#/components/schemas/stepResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/stepResponseJson'
        "500":
          description: Internal Server Error
  /api/v1/task/{task}/step/{step}:
    get:
      tags:
        - Step
      summary: Log
      description: Step Execution Output
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
        - name: step
          in: path
          description: step name
          required: true
          schema:
            type: string
            default: step_name
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    type: array
                    items:
                      $ref: '#/components/schemas/stepLogResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/stepLogResponseJson'
        "500":
          description: Internal Server Error
    put:
      tags:
        - Step
      summary: Manager
      description: "Step management, can terminate, suspend, and resolve"
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
        - name: step
          in: path
          description: step name
          required: true
          schema:
            type: string
            default: step_name
        - name: action
          in: query
          description: management action
          schema:
            type: string
            default: paused
            enum:
              - paused
              - kill
              - pause
              - resume
        - name: duration
          in: query
          description: "how long to pause; if empty, manual continuation is required"
          schema:
            type: string
            default: 1m
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
        "500":
          description: Internal Server Error
  /api/v1/task/{task}/workspace:
    get:
      tags:
        - Workspace
      summary: Get
      description: Get file/folder contents
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
        - name: path
          in: query
          description: dir path
          schema:
            type: string
            default: /
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    $ref: '#/components/schemas/workspaceResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    $ref: '#/components/schemas/workspaceResponseJson'
        "500":
          description: Internal Server Error
    post:
      tags:
        - Workspace
      summary: Upload
      description: Upload a file or directory
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
        - name: path
          in: query
          description: dir path
          schema:
            type: string
            default: /
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              required:
                - files
              type: object
              properties:
                files:
                  type: string
                  description: files
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Workspace
      summary: Delete
      description: Delete file/folder contents
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
        - name: path
          in: query
          description: dir path
          schema:
            type: string
            default: /
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
        "500":
          description: Internal Server Error
  /api/v2/task/{task}:
    get:
      tags:
        - Task
      summary: Detail
      description: Get task detail
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    $ref: '#/components/schemas/taskResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    $ref: '#/components/schemas/taskResponseJson'
        "500":
          description: Internal Server Error
  /api/v2/task:
    post:
      tags:
        - Task
      summary: CreateV2
      description: Create a task
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        description: body
        content:
          application/yaml:
            schema:
              $ref: '#/components/schemas/taskRequestYaml'
          application/json:
            schema:
              $ref: '#/components/schemas/taskRequestJson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/taskRequestJson'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    $ref: '#/components/schemas/taskCreateResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    $ref: '#/components/schemas/taskCreateResponseJson'
        "500":
          description: Internal Server Error
  /api/v2/task/{task}/step/{step}:
    get:
      tags:
        - Step
      summary: Detail
      description: Get step detail
      parameters:
        - $ref: '#/components/parameters/Accept'
        - $ref: '#/components/parameters/Content-Type'
        - name: task
          in: path
          description: task name
          required: true
          schema:
            type: string
            default: task_name
        - name: step
          in: path
          description: step name
          required: true
          schema:
            type: string
            default: step_name
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  Code:
                    type: integer
                    example: 0
                  Message:
                    type: string
                    example: success
                  Timestamp:
                    type: integer
                    example: 1719977634080348943
                  Data:
                    $ref: '#/components/schemas/stepResponseYaml'
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  msg:
                    type: string
                    example: success
                  timestamp:
                    type: integer
                    example: 1719977634080348943
                  data:
                    $ref: '#/components/schemas/stepResponseJson'
        "500":
          description: Internal Server Error
components:
  parameters:
    Content-Type:
      in: header
      name: Content-Type
      schema:
        type: string
        default: application/yaml
        enum:
          - application/yaml
          - application/json
    Accept:
      in: header
      name: Accept
      schema:
        type: string
        default: application/yaml
        enum:
          - application/yaml
          - application/json
  schemas:
    poolResponseYaml:
      type: object
      properties:
        Size:
          type: integer
          example: 30
        Total:
          type: integer
          example: 50
        Running:
          type: integer
          example: 10
        Waiting:
          type: integer
          example: 20
    poolResponseJson:
      type: object
      properties:
        size:
          type: integer
          example: 30
        total:
          type: integer
          example: 50
        running:
          type: integer
          example: 10
        waiting:
          type: integer
          example: 20
    poolRequestYaml:
      required:
        - Size
      type: object
      properties:
        Size:
          type: integer
          example: 30
    poolRequestJson:
      required:
        - size
      type: object
      properties:
        size:
          type: integer
          example: 30
    pageResponseYaml:
      type: object
      properties:
        Current:
          type: integer
          example: 1
        Size:
          type: integer
          example: 100
        Total:
          type: integer
          example: 100
    pageResponseJson:
      type: object
      properties:
        current:
          type: integer
          example: 1
        size:
          type: integer
          example: 100
        total:
          type: integer
          example: 100
    timeResponseYaml:
      type: object
      properties:
        Start:
          type: string
          example: 2021-01-01T00:00:00Z
        End:
          type: string
          example: 2021-01-01T00:00:00Z
    timeResponseJson:
      type: object
      properties:
        start:
          type: string
          example: 2021-01-01T00:00:00Z
        end:
          type: string
          example: 2021-01-01T00:00:00Z
    env:
      type: object
      properties:
        K1:
          type: string
          example: v1
        K2:
          type: string
          example: v2
    taskResponseYaml:
      type: object
      properties:
        Name:
          type: string
          example: task-name
        Description:
          type: string
          example: task description
        State:
          type: string
          example: running
        Message:
          type: string
          example: task is running
        Count:
          type: integer
          example: 1
        Env:
          $ref: '#/components/schemas/env'
        Timeout:
          type: string
          example: 24h
        Disable:
          type: boolean
          example: false
        Time:
          $ref: '#/components/schemas/timeResponseYaml'
    taskResponseJson:
      type: object
      properties:
        name:
          type: string
          example: task-name
        description:
          type: string
          example: task description
        state:
          type: string
          example: running
        msg:
          type: string
          example: task is running
        count:
          type: integer
          example: 1
        env:
          $ref: '#/components/schemas/env'
        timeout:
          type: string
          example: 24h
        disable:
          type: boolean
          example: false
        time:
          $ref: '#/components/schemas/timeResponseJson'
    taskListResponseYaml:
      type: object
      properties:
        Page:
          $ref: '#/components/schemas/pageResponseYaml'
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/taskResponseYaml'
    taskListResponseJson:
      type: object
      properties:
        Page:
          $ref: '#/components/schemas/pageResponseJson'
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/taskResponseJson'
    taskCreateResponseYaml:
      type: object
      properties:
        Name:
          type: string
          example: task-name
        Count:
          type: integer
          example: 1
    taskCreateResponseJson:
      type: object
      properties:
        name:
          type: string
          example: task-name
        count:
          type: integer
          example: 1
    stepResponseYaml:
      type: object
      properties:
        Name:
          type: string
          example: step-name
        Code:
          type: integer
          example: 0
        State:
          type: string
          example: success
        Message:
          type: string
          example: step success execute
        Timeout:
          type: string
          example: 24h
        Disable:
          type: boolean
          example: false
        Depends:
          type: array
          items:
            type: string
            example: step-name
        Env:
          $ref: '#/components/schemas/env'
        Type:
          type: string
          example: bash
        Content:
          type: string
          example: |
            #!/bin/bash
            echo "hello world"
        Time:
          $ref: '#/components/schemas/timeResponseYaml'
    stepResponseJson:
      type: object
      properties:
        name:
          type: string
          example: step-name
        code:
          type: integer
          example: 0
        state:
          type: string
          example: success
        msg:
          type: string
          example: step success execute
        timeout:
          type: string
          example: 24h
        disable:
          type: boolean
          example: false
        depends:
          type: array
          items:
            type: string
            example: step-name
        env:
          $ref: '#/components/schemas/env'
        type:
          type: string
          example: bash
        content:
          type: string
          example: |
            #!/bin/bash
            echo "hello world"
        time:
          $ref: '#/components/schemas/timeResponseJson'
    stepLogResponseYaml:
      type: object
      properties:
        Timestamp:
          type: integer
          example: 1719977634080348943
        Line:
          type: integer
          example: 0
        Content:
          type: string
          example: hello world
    stepLogResponseJson:
      type: object
      properties:
        timestamp:
          type: integer
          example: 1719977634080348943
        line:
          type: integer
          example: 0
        content:
          type: string
          example: hello world
    workspaceResponseYaml:
      type: object
      properties:
        Total:
          type: integer
          example: 1
        Files:
          type: array
          items:
            type: object
            properties:
              Name:
                type: string
                example: file.txt
              Path:
                type: string
                example: /file.txt
              Size:
                type: integer
                example: 100
              Mode:
                type: string
                example: -rw-r--r--
              ModeTime:
                type: string
                example: 2023-08-01T09:01:01Z
              IsDir:
                type: boolean
                example: false
    workspaceResponseJson:
      type: object
      properties:
        total:
          type: integer
          example: 1
        files:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: file.txt
              path:
                type: string
                example: /file.txt
              size:
                type: integer
                example: 100
              mode:
                type: string
                example: -rw-r--r--
              modeTime:
                type: string
                example: 2023-08-01T09:01:01Z
              is_dir:
                type: boolean
                example: false
    stepRequestJson:
      type: object
      properties:
        name:
          type: string
          example: script.ps1
        timeout:
          type: string
          example: 3m
        disable:
          type: boolean
          example: false
        depends:
          type: array
          example:
            - ""
          items:
            type: string
        env:
          $ref: '#/components/schemas/env'
        type:
          type: string
          example: powershell
        content:
          type: string
          example: sleep 10
    stepRequestYaml:
      type: object
      properties:
        Name:
          type: string
          example: script.ps1
        Timeout:
          type: string
          example: 3m
        Disable:
          type: boolean
          example: false
        Depends:
          type: array
          example:
            - ""
          items:
            type: string
        Env:
          $ref: '#/components/schemas/env'
        Type:
          type: string
          example: powershell
        Content:
          type: string
          example: sleep 10
    taskRequestJson:
      type: object
      properties:
        name:
          type: string
          example: "task_name"
        description:
          type: string
          example: "task description"
        async:
          type: boolean
          example: false
        timeout:
          type: string
          example: "24h"
        disable:
          type: boolean
          example: false
        env:
          $ref: '#/components/schemas/env'
        step:
          type: array
          items:
            $ref: '#/components/schemas/stepRequestJson'
    taskRequestYaml:
      type: object
      properties:
        Name:
          type: string
          example: "task_name"
        Description:
          type: string
          example: "task description"
        Async:
          type: boolean
          example: false
        Timeout:
          type: string
          example: "24h"
        Disable:
          type: boolean
          example: false
        Env:
          $ref: '#/components/schemas/env'
        Step:
          type: array
          items:
            $ref: '#/components/schemas/stepRequestYaml'